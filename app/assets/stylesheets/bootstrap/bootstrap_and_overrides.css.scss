// "bootstrap-sprockets" must be imported before "bootstrap" and "bootstrap/variables"
@import "definitions";
@import "bootstrap-sprockets";
@import "bootstrap";


/* change cols so they can be sections at the same time */
[class*="col-"] {
  /* replace padding by (invisible) border (still included in width) */
  margin: 0;
  padding: 0;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
  border-style: solid;
  border-color: transparent;
  border-width: 0 ($grid-gutter-width/2) $grid-gutter-width;
  /* prevent double margin for cols that aren't sections but contain them */
  & > section:first-child {
    margin-top: 0px;
  }
  & > section:last-child {
    margin-bottom: 0px;
  }
  .col-lastfix {
    border-bottom-width: 0;
  }
}


/* column modifiers */
.col-narrow {
  min-width: 250px;
  max-width: 380px;
}
.col-medium {
  min-width: 270px;
  max-width: 440px;
}
.col-centered {
  float: none !important;
  margin-left: auto !important;
  margin-right: auto !important;
}
@media (max-width: 700px) {
  .no-float-below-700px {
    display: block !important;
    float: none !important;
    width: auto !important;
  }
}
@media (max-width: $screen-xs-max) {
  .col-only-xs-centered {
    float: none !important;
    margin-left: auto !important;
    margin-right: auto !important;
  }
}
@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  .col-only-sm-centered {
    float: none !important;
    margin-left: auto !important;
    margin-right: auto !important;
  }
}



/* row modifiers (equal height columns) */
@media (min-width: $screen-sm-min) {
  .row-sm-eq-height {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}
@media (min-width: $screen-md-min) {
  .row-md-eq-height {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
  .row-md-diff-height {
    display: block !important;
  }
}
@media (min-width: $screen-lg-min) {
  .row-lg-eq-height {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
  .row-lg-diff-height {
    display: auto;
  }
}

/* responsive utility helper classes */
.visible-hamburger-block {
  display: none !important;
}
@media (max-width: $grid-float-breakpoint) {
  .visible-hamburger-block {
    display: block !important;
  }
  .hidden-hamburger {
    display: none !important;
  }
}

ul.nav li.dropdown:hover > ul.dropdown-menu {
  display: block;
}
